"use client";

import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google";
import "./globals.css";
import { cn } from "@/lib/utils";
import Link from "next/link";
import {
  Fingerprint,
  LayoutDashboard,
  Users,
  BadgeInfo,
  Bell,
} from "lucide-react";
import { usePathname } from "next/navigation";
import { ScrollArea } from "@/components/ui/scroll-area";
import { useEffect } from "react";

const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const NAVS = [
  {
    route: "/",
    label: "Home",
    icon: (isActive: boolean) => {
      return (
        <LayoutDashboard
          color={isActive ? "red" : "black"}
          className='w-5 h-5'
        />
      );
    },
  },
  {
    route: "/vote",
    label: "Vote",
    icon: (isActive: boolean) => {
      return (
        <Fingerprint color={isActive ? "red" : "black"} className='w-5 h-5' />
      );
    },
  },
  {
    route: "/candidate",
    label: "Candidates",
    icon: (isActive: boolean) => {
      return <Users color={isActive ? "red" : "black"} className='w-5 h-5' />;
    },
  },
  {
    route: "/about",
    label: "About",
    icon: (isActive: boolean) => {
      return (
        <BadgeInfo color={isActive ? "red" : "black"} className='w-5 h-5' />
      );
    },
  },
];

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname();
  const pathParts = pathname?.split("/");
  const desiredPath = pathParts ? `/${pathParts[1]}` : "";
  const isNavRoute = NAVS.some((nav) => nav.route === desiredPath);

  return (
    <html lang='en'>
      <body
        className={cn(
          "min-h-screen bg-background font-sans antialiased",
          fontSans.variable
        )}>
        <ScrollArea>
          {isNavRoute ? (
            <div className='flex-1 flex flex-col-reverse content-between'>
              <header className='fixed top-0 left-0 z-50 w-full bg-background border-b sm:border-0 px-3 '>
                <div className='container mx-auto flex h-11 items-center justify-between px-0 max-w-5xl sm:border-b'>
                  <Link
                    href='/'
                    className='flex items-center gap-2'
                    prefetch={false}>
                    <span className='text-base font-medium'>Election PH</span>
                  </Link>
                  <nav className='justify-around items-center h-14 gap-x-10 hidden sm:flex'>
                    <Link
                      href='/'
                      className='flex flex-col items-center gap-1 text-muted-foreground hover:text-foreground'
                      prefetch={false}>
                      Home
                    </Link>
                    <Link
                      href='/vote'
                      className='flex flex-col items-center gap-1 text-muted-foreground hover:text-foreground'
                      prefetch={false}>
                      Vote
                    </Link>
                    <Link
                      href='/candidate'
                      className='flex flex-col items-center gap-1 text-muted-foreground hover:text-foreground'
                      prefetch={false}>
                      Candidates
                    </Link>
                    <Link
                      href='/about'
                      className='flex flex-col items-center gap-1 text-muted-foreground hover:text-foreground'
                      prefetch={false}>
                      About
                    </Link>
                  </nav>
                </div>
              </header>

              <div className='flex flex-1 pt-11 w-full max-w-5xl self-center'>
                {children}
              </div>

              <nav className='fixed bottom-0 left-0 z-50 w-full bg-background border-t flex flex-1 justify-center sm:hidden'>
                <div className='flex flex-1 justify-around items-center h-14 max-w-6xl '>
                  {NAVS &&
                    NAVS.map((item, i) => (
                      <Link
                        key={i}
                        href={item.route}
                        className='flex flex-col items-center gap-1 text-muted-foreground hover:text-foreground'
                        prefetch={true}>
                        {item.icon(desiredPath === item.route)}
                        <span
                          className={`text-xs ${
                            desiredPath === item.route && "text-red-600"
                          }`}>
                          {item.label}
                        </span>
                      </Link>
                    ))}
                </div>
              </nav>
            </div>
          ) : (
            <>{children}</>
          )}
        </ScrollArea>
      </body>
    </html>
  );
}
